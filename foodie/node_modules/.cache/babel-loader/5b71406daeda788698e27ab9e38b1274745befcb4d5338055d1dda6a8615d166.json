{"ast":null,"code":"var _jsxFileName = \"/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Food.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Food() {\n  _s();\n  const API_KEY = \"125a7a6824ba4e698a8bb78ff1616df2\";\n  // Once you have your API key, you have to put it in the request URL for every request you make like so ?apiKey=YOUR-API-KEY.\n  // Attention: Only the first query parameter is prefixed with a ? (question mark), all subsequent ones will be prefixed with a & (ampersand). That is how URLs work and nothing related to our API. Here's a full example with two parameters apiKey and includeNutrition: https://api.spoonacular.com/recipes/716429/information?apiKey=YOUR-API-KEY&includeNutrition=true.\n\n  const [keyword, setKeyword] = React.useState(\"\");\n  const [results, setResults] = React.useState([]);\n  const getRecipeByAny = async keyword => {\n    const response = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&query=${keyword}`);\n    const data = await response.json();\n    // console.log(data);\n    // console.log(data.results);\n    setResults(data.results);\n  };\n  const handleChange = e => {\n    setKeyword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    getRecipeByAny(keyword);\n  };\n  const renderSearch = results => {\n    return results === null || results === void 0 ? void 0 : results.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"food-search\",\n        value: keyword,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), renderSearch(results)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Food, \"t1m0bVHgjgHfsulg40yGmirGob0=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Food","_s","API_KEY","keyword","setKeyword","useState","results","setResults","getRecipeByAny","response","fetch","data","json","handleChange","e","target","value","handleSubmit","preventDefault","renderSearch","map","children","title","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","action","onSubmit","type","name","onChange","_c","$RefreshReg$"],"sources":["/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Food.js"],"sourcesContent":["import React from \"react\";\n\nfunction Food() {\n  const API_KEY = \"125a7a6824ba4e698a8bb78ff1616df2\";\n  // Once you have your API key, you have to put it in the request URL for every request you make like so ?apiKey=YOUR-API-KEY.\n  // Attention: Only the first query parameter is prefixed with a ? (question mark), all subsequent ones will be prefixed with a & (ampersand). That is how URLs work and nothing related to our API. Here's a full example with two parameters apiKey and includeNutrition: https://api.spoonacular.com/recipes/716429/information?apiKey=YOUR-API-KEY&includeNutrition=true.\n\n  const [keyword, setKeyword] = React.useState(\"\");\n  const [results, setResults] = React.useState([]);\n\n  const getRecipeByAny = async (keyword) => {\n    const response = await fetch(\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&query=${keyword}`\n    );\n    const data = await response.json();\n    // console.log(data);\n    // console.log(data.results);\n    setResults(data.results);\n  };\n\n  const handleChange = (e) => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getRecipeByAny(keyword);\n  };\n\n  const renderSearch = (results) => {\n    return results?.map((data) => {\n      return (\n        <div>\n          <div>{data.title}</div>\n          <img src={data.image} alt=\"\" />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"food-search\"\n          value={keyword}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {renderSearch(results)}\n    </div>\n  );\n}\n\nexport default Food;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,OAAO,GAAG,kCAAkC;EAClD;EACA;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMG,cAAc,GAAG,MAAOL,OAAO,IAAK;IACxC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CACzB,4DAA2DR,OAAQ,UAASC,OAAQ,EACvF,CAAC;IACD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC;IACA;IACAL,UAAU,CAACI,IAAI,CAACL,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBV,cAAc,CAACL,OAAO,CAAC;EACzB,CAAC;EAED,MAAMgB,YAAY,GAAIb,OAAO,IAAK;IAChC,OAAOA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,GAAG,CAAET,IAAI,IAAK;MAC5B,oBACEZ,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAAsB,QAAA,EAAMV,IAAI,CAACW;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvB3B,OAAA;UAAK4B,GAAG,EAAEhB,IAAI,CAACiB,KAAM;UAACC,GAAG,EAAC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAEV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE3B,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAM+B,MAAM,EAAC,EAAE;MAACC,QAAQ,EAAEd,YAAa;MAAAI,QAAA,gBACrCtB,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,aAAa;QAClBjB,KAAK,EAAEb,OAAQ;QACf+B,QAAQ,EAAErB;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACT3B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNP,YAAY,CAACb,OAAO,CAAC;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACzB,EAAA,CApDQD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAsDb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}