{"ast":null,"code":"var _jsxFileName = \"/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Restaurant.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleClick = () => {\n    onSearch(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"searchTerm\",\n      name: \"searchTerm\",\n      onChange: handleChange,\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = Search;\nconst Restaurant = () => {\n  _s2();\n  const [searchResults, setSearchResults] = useState([]);\n  const [map, setMap] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyDC2SFtvrCtHCJkCdWKiXoLTn8CI7F8pIg'\n  });\n  useEffect(() => {\n    if (isLoaded && searchResults.length > 0 && map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      searchResults.forEach(result => {\n        const {\n          latitude,\n          longitude\n        } = result.coordinates;\n        const marker = new window.google.maps.Marker({\n          position: {\n            lat: latitude,\n            lng: longitude\n          },\n          map\n        });\n        bounds.extend(marker.getPosition());\n      });\n      map.fitBounds(bounds);\n    }\n  }, [isLoaded, searchResults, map]);\n  const handleSearch = async term => {\n    try {\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search`, {\n        headers: {\n          Authorization: `Bearer kk8a2BP-9sEjKki126oia8BYJurhKXV5UDpW0Zb3zuzfh3WA-K4VsdeQm0u5T7fSTidUy8PFkhx2ZZ0sqwPov0zkK1F95Eg05ZYDMjKqLyOa9iLUEHFCJIbcn6SYZHYx`,\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        params: {\n          categories: term,\n          location: 'Atlanta',\n          limit: 5\n        }\n      });\n      setSearchResults(response.data.businesses);\n    } catch (error) {\n      console.error('Error occurred while fetching data from Yelp API:', error);\n    }\n  };\n  const onMapLoad = map => {\n    setMap(map);\n  };\n  const handleMarkerClick = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedRestaurant(null);\n  };\n  const containerStyle = {\n    width: '400px',\n    height: '400px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: {\n        lat: 33.7490,\n        lng: -84.3880\n      },\n      zoom: 10,\n      onLoad: onMapLoad,\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: result.coordinates.latitude,\n          lng: result.coordinates.longitude\n        },\n        onClick: () => handleMarkerClick(result),\n        children: selectedRestaurant === result && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          onCloseClick: handleInfoWindowClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result.location.address1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s2(Restaurant, \"NCSd+ilKpmH4DGKRp91vWpPYLqk=\", false, function () {\n  return [useLoadScript];\n});\n_c2 = Restaurant;\nexport default Restaurant;\nvar _c, _c2;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Restaurant\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","Marker","InfoWindow","useLoadScript","jsxDEV","_jsxDEV","Search","_ref","_s","onSearch","searchTerm","setSearchTerm","handleChange","event","target","value","handleClick","children","type","id","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Restaurant","_s2","searchResults","setSearchResults","map","setMap","selectedRestaurant","setSelectedRestaurant","isLoaded","googleMapsApiKey","length","bounds","window","google","maps","LatLngBounds","forEach","result","latitude","longitude","coordinates","marker","position","lat","lng","extend","getPosition","fitBounds","handleSearch","term","response","get","headers","Authorization","params","categories","location","limit","data","businesses","error","console","onMapLoad","handleMarkerClick","restaurant","handleInfoWindowClose","containerStyle","width","height","className","mapContainerStyle","center","zoom","onLoad","onCloseClick","address1","_c2","$RefreshReg$"],"sources":["/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Restaurant.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\n\nconst Search = ({ onSearch }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleClick = () => {\n        onSearch(searchTerm);\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                id=\"searchTerm\"\n                name=\"searchTerm\"\n                onChange={handleChange}\n                value={searchTerm}\n            />\n            <button onClick={handleClick}>Search</button>\n        </div>\n    );\n};\n\nconst Restaurant = () => {\n    const [searchResults, setSearchResults] = useState([]);\n    const [map, setMap] = useState(null);\n    const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: 'AIzaSyDC2SFtvrCtHCJkCdWKiXoLTn8CI7F8pIg',\n    });\n\n    useEffect(() => {\n        if (isLoaded && searchResults.length > 0 && map) {\n            const bounds = new window.google.maps.LatLngBounds();\n            searchResults.forEach((result) => {\n                const { latitude, longitude } = result.coordinates;\n                const marker = new window.google.maps.Marker({\n                    position: { lat: latitude, lng: longitude },\n                    map,\n                });\n                bounds.extend(marker.getPosition());\n            });\n            map.fitBounds(bounds);\n        }\n    }, [isLoaded, searchResults, map]);\n\n    const handleSearch = async (term) => {\n        try {\n            const response = await axios.get(\n                `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search`,\n                {\n                    headers: {\n                        Authorization: `Bearer kk8a2BP-9sEjKki126oia8BYJurhKXV5UDpW0Zb3zuzfh3WA-K4VsdeQm0u5T7fSTidUy8PFkhx2ZZ0sqwPov0zkK1F95Eg05ZYDMjKqLyOa9iLUEHFCJIbcn6SYZHYx`,\n                        'X-Requested-With': 'XMLHttpRequest',\n                    },\n                    params: {\n                        categories: term,\n                        location: 'Atlanta',\n                        limit: 5,\n                    },\n                }\n            );\n            setSearchResults(response.data.businesses);\n        } catch (error) {\n            console.error('Error occurred while fetching data from Yelp API:', error);\n        }\n    };\n\n    const onMapLoad = (map) => {\n        setMap(map);\n    };\n\n    const handleMarkerClick = (restaurant) => {\n        setSelectedRestaurant(restaurant);\n    };\n\n    const handleInfoWindowClose = () => {\n        setSelectedRestaurant(null);\n    };\n\n    const containerStyle = {\n        width: '400px',\n        height: '400px',\n    };\n\n    return (\n        <div className=\"Map\">\n            <Search onSearch={handleSearch} />\n            {isLoaded ? (\n                <GoogleMap\n                    mapContainerStyle={containerStyle}\n                    center={{ lat: 33.7490, lng: -84.3880 }}\n                    zoom={10}\n                    onLoad={onMapLoad}\n                >\n                    {searchResults.map((result) => (\n                        <Marker\n                            key={result.id}\n                            position={{\n                                lat: result.coordinates.latitude,\n                                lng: result.coordinates.longitude,\n                            }}\n                            onClick={() => handleMarkerClick(result)}\n                        >\n                            {selectedRestaurant === result && (\n                                <InfoWindow onCloseClick={handleInfoWindowClose}>\n                                    <div>\n                                        <h3>{result.name}</h3>\n                                        <p>{result.location.address1}</p>\n                                    </div>\n                                </InfoWindow>\n                            )}\n                        </Marker>\n                    ))}\n                </GoogleMap>\n            ) : (\n                <h1>Loading...</h1>\n            )}\n        </div>\n    );\n};\n\nexport default Restaurant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}