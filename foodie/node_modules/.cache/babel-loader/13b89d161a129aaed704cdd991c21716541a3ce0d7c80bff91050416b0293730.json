{"ast":null,"code":"var _jsxFileName = \"/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Restaurant.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      onSearch(searchTerm);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"searchTerm\",\n      name: \"searchTerm\",\n      onChange: handleChange,\n      onKeyPress: handleKeyPress,\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSearch(searchTerm),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = Search;\nconst Restaurant = () => {\n  _s2();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [map, setMap] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyDC2SFtvrCtHCJkCdWKiXoLTn8CI7F8pIg'\n  });\n  useEffect(() => {\n    if (isLoaded && searchTerm && map) {\n      const searchRestaurants = async () => {\n        try {\n          const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search`, {\n            headers: {\n              Authorization: `Bearer kk8a2BP-9sEjKki126oia8BYJurhKXV5UDpW0Zb3zuzfh3WA-K4VsdeQm0u5T7fSTidUy8PFkhx2ZZ0sqwPov0zkK1F95Eg05ZYDMjKqLyOa9iLUEHFCJIbcn6SYZHYx`,\n              'X-Requested-With': 'XMLHttpRequest'\n            },\n            params: {\n              categories: searchTerm,\n              location: 'Atlanta',\n              limit: 5\n            }\n          });\n          setSearchResults(response.data.businesses);\n        } catch (error) {\n          console.error('Error occurred while fetching data from Yelp API:', error);\n        }\n      };\n      searchRestaurants();\n    }\n  }, [isLoaded, searchTerm, map]);\n  const handleSearch = term => {\n    setSearchTerm(term.toLowerCase());\n  };\n  const handleMarkerClick = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedRestaurant(null);\n  };\n  const onMapLoad = map => {\n    setMap(map);\n  };\n  const containerStyle = {\n    width: '400px',\n    height: '400px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: {\n        lat: 33.7490,\n        lng: -84.3880\n      },\n      zoom: 10,\n      onLoad: onMapLoad,\n      children: [searchResults.map(result => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: result.coordinates.latitude,\n          lng: result.coordinates.longitude\n        },\n        onClick: () => handleMarkerClick(result)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)), selectedRestaurant && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selectedRestaurant.coordinates.latitude,\n          lng: selectedRestaurant.coordinates.longitude\n        },\n        onCloseClick: handleInfoWindowClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedRestaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedRestaurant.location.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s2(Restaurant, \"ZWmWJFGUpjOzB7Xy38902LRbbTI=\", false, function () {\n  return [useLoadScript];\n});\n_c2 = Restaurant;\nexport default Restaurant;\nvar _c, _c2;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Restaurant\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","Marker","InfoWindow","useLoadScript","jsxDEV","_jsxDEV","Search","_ref","_s","onSearch","searchTerm","setSearchTerm","handleChange","event","target","value","handleKeyPress","key","children","type","id","name","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Restaurant","_s2","searchResults","setSearchResults","map","setMap","selectedRestaurant","setSelectedRestaurant","isLoaded","googleMapsApiKey","searchRestaurants","response","get","headers","Authorization","params","categories","location","limit","data","businesses","error","console","handleSearch","term","toLowerCase","handleMarkerClick","restaurant","handleInfoWindowClose","onMapLoad","containerStyle","width","height","className","mapContainerStyle","center","lat","lng","zoom","onLoad","result","position","coordinates","latitude","longitude","onCloseClick","address","_c2","$RefreshReg$"],"sources":["/Users/chanwookim/Desktop/Foodie_Project/Foodie/foodie/src/components/Restaurant.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\n\nconst Search = ({ onSearch }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            onSearch(searchTerm);\n        }\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                id=\"searchTerm\"\n                name=\"searchTerm\"\n                onChange={handleChange}\n                onKeyPress={handleKeyPress}\n                value={searchTerm}\n            />\n            <button onClick={() => onSearch(searchTerm)}>Search</button>\n        </div>\n    );\n};\n\nconst Restaurant = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [map, setMap] = useState(null);\n    const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: 'AIzaSyDC2SFtvrCtHCJkCdWKiXoLTn8CI7F8pIg',\n    });\n\n    useEffect(() => {\n        if (isLoaded && searchTerm && map) {\n            const searchRestaurants = async () => {\n                try {\n                    const response = await axios.get(\n                        `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search`,\n                        {\n                            headers: {\n                                Authorization: `Bearer kk8a2BP-9sEjKki126oia8BYJurhKXV5UDpW0Zb3zuzfh3WA-K4VsdeQm0u5T7fSTidUy8PFkhx2ZZ0sqwPov0zkK1F95Eg05ZYDMjKqLyOa9iLUEHFCJIbcn6SYZHYx`,\n                                'X-Requested-With': 'XMLHttpRequest',\n                            },\n                            params: {\n                                categories: searchTerm,\n                                location: 'Atlanta',\n                                limit: 5,\n                            },\n                        }\n                    );\n                    setSearchResults(response.data.businesses);\n                } catch (error) {\n                    console.error('Error occurred while fetching data from Yelp API:', error);\n                }\n            };\n            searchRestaurants();\n        }\n    }, [isLoaded, searchTerm, map]);\n\n    const handleSearch = (term) => {\n        setSearchTerm(term.toLowerCase());\n    };\n\n    const handleMarkerClick = (restaurant) => {\n        setSelectedRestaurant(restaurant);\n    };\n\n    const handleInfoWindowClose = () => {\n        setSelectedRestaurant(null);\n    };\n\n    const onMapLoad = (map) => {\n        setMap(map);\n    };\n\n    const containerStyle = {\n        width: '400px',\n        height: '400px',\n    };\n\n    return (\n        <div className=\"Map\">\n            <Search onSearch={handleSearch} />\n            {isLoaded ? (\n                <GoogleMap\n                    mapContainerStyle={containerStyle}\n                    center={{ lat: 33.7490, lng: -84.3880 }}\n                    zoom={10}\n                    onLoad={onMapLoad}\n                >\n                    {searchResults.map((result) => (\n                        <Marker\n                            key={result.id}\n                            position={{\n                                lat: result.coordinates.latitude,\n                                lng: result.coordinates.longitude,\n                            }}\n                            onClick={() => handleMarkerClick(result)}\n                        />\n                    ))}\n                    {selectedRestaurant && (\n                        <InfoWindow\n                            position={{\n                                lat: selectedRestaurant.coordinates.latitude,\n                                lng: selectedRestaurant.coordinates.longitude,\n                            }}\n                            onCloseClick={handleInfoWindowClose}\n                        >\n                            <div>\n                                <h2>{selectedRestaurant.name}</h2>\n                                <p>{selectedRestaurant.location.address}</p>\n                            </div>\n                        </InfoWindow>\n                    )}\n                </GoogleMap>\n            ) : (\n                <h1>Loading...</h1>\n            )}\n        </div>\n    );\n};\n\nexport default Restaurant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}